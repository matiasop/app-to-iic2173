version: "3.8"
services:
  postgres:
    image: postgres:13-alpine
    command: ["postgres", "-c", "fsync=false", "-c", "full_page_writes=off"]
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - ./tmp/db:/var/lib/postgresql/data
    ports:
      - "5432:5432"
  app:
    build:
      context: .
      dockerfile: app.Dockerfile
    command: bash -c "bundle exec puma -C config/puma.rb"
    volumes:
      - .:/app
    depends_on:
      - postgres
    image: app
    container_name: app
    restart: unless-stopped
  nginx:
    build:
      context: .
      dockerfile: ./nginx.Dockerfile
    depends_on:
      - app
    ports:
      - 80:80
      - 443:443
    restart: unless-stopped
    volumes:
      - web-root:/var/www/html
      - ./nginx-conf:/etc/nginx/conf.d
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - dhparam:/etc/ssl/certs
    # networks:
    #   - app-network
  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - web-root:/var/www/html
    depends_on:
      - nginx
    command: certonly --webroot --webroot-path=/var/www/html --email movalle4@uc.cl --agree-tos --no-eff-email --force-renewal -d iic2173-mop.tk  -d www.iic2173-mop.tk

volumes:
  certbot-etc:
  certbot-var:
  web-root:
    driver: local
    driver_opts:
      type: none
      device: /home/ubuntu/app-to-iic2173/public/
      o: bind
  dhparam:
    driver: local
    driver_opts:
      type: none
      device: /home/ubuntu/app-to-iic2173/dhparam/
      o: bind